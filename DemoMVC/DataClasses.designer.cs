#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace DemoMVC
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="db_DemoTest")]
	public partial class DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 擴充性方法定義
    partial void OnCreated();
    partial void InsertMovieRoom_Cell(MovieRoom_Cell instance);
    partial void UpdateMovieRoom_Cell(MovieRoom_Cell instance);
    partial void DeleteMovieRoom_Cell(MovieRoom_Cell instance);
    partial void InsertNovieRoom_Sell(NovieRoom_Sell instance);
    partial void UpdateNovieRoom_Sell(NovieRoom_Sell instance);
    partial void DeleteNovieRoom_Sell(NovieRoom_Sell instance);
    partial void InsertMovieRoom_Row(MovieRoom_Row instance);
    partial void UpdateMovieRoom_Row(MovieRoom_Row instance);
    partial void DeleteMovieRoom_Row(MovieRoom_Row instance);
    #endregion
		
		public DataClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["db_DemoTestConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<MovieRoom_Cell> MovieRoom_Cell
		{
			get
			{
				return this.GetTable<MovieRoom_Cell>();
			}
		}
		
		public System.Data.Linq.Table<NovieRoom_Sell> NovieRoom_Sell
		{
			get
			{
				return this.GetTable<NovieRoom_Sell>();
			}
		}
		
		public System.Data.Linq.Table<MovieRoom_Row> MovieRoom_Row
		{
			get
			{
				return this.GetTable<MovieRoom_Row>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MovieRoom_Cell")]
	public partial class MovieRoom_Cell : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _MRCID;
		
		private long _MRRID;
		
		private string _CellName;
		
		private int _SortNo;
		
		private System.DateTime _CreDate;
		
		private System.DateTime _UpdDate;
		
		private EntitySet<NovieRoom_Sell> _NovieRoom_Sell;
		
		private EntityRef<MovieRoom_Row> _MovieRoom_Row;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMRCIDChanging(long value);
    partial void OnMRCIDChanged();
    partial void OnMRRIDChanging(long value);
    partial void OnMRRIDChanged();
    partial void OnCellNameChanging(string value);
    partial void OnCellNameChanged();
    partial void OnSortNoChanging(int value);
    partial void OnSortNoChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    #endregion
		
		public MovieRoom_Cell()
		{
			this._NovieRoom_Sell = new EntitySet<NovieRoom_Sell>(new Action<NovieRoom_Sell>(this.attach_NovieRoom_Sell), new Action<NovieRoom_Sell>(this.detach_NovieRoom_Sell));
			this._MovieRoom_Row = default(EntityRef<MovieRoom_Row>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MRCID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long MRCID
		{
			get
			{
				return this._MRCID;
			}
			set
			{
				if ((this._MRCID != value))
				{
					this.OnMRCIDChanging(value);
					this.SendPropertyChanging();
					this._MRCID = value;
					this.SendPropertyChanged("MRCID");
					this.OnMRCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MRRID", DbType="BigInt NOT NULL")]
		public long MRRID
		{
			get
			{
				return this._MRRID;
			}
			set
			{
				if ((this._MRRID != value))
				{
					if (this._MovieRoom_Row.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMRRIDChanging(value);
					this.SendPropertyChanging();
					this._MRRID = value;
					this.SendPropertyChanged("MRRID");
					this.OnMRRIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellName", DbType="NChar(10)")]
		public string CellName
		{
			get
			{
				return this._CellName;
			}
			set
			{
				if ((this._CellName != value))
				{
					this.OnCellNameChanging(value);
					this.SendPropertyChanging();
					this._CellName = value;
					this.SendPropertyChanged("CellName");
					this.OnCellNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortNo", DbType="Int NOT NULL")]
		public int SortNo
		{
			get
			{
				return this._SortNo;
			}
			set
			{
				if ((this._SortNo != value))
				{
					this.OnSortNoChanging(value);
					this.SendPropertyChanging();
					this._SortNo = value;
					this.SendPropertyChanged("SortNo");
					this.OnSortNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MovieRoom_Cell_NovieRoom_Sell", Storage="_NovieRoom_Sell", ThisKey="MRCID", OtherKey="MRCID")]
		public EntitySet<NovieRoom_Sell> NovieRoom_Sell
		{
			get
			{
				return this._NovieRoom_Sell;
			}
			set
			{
				this._NovieRoom_Sell.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MovieRoom_Row_MovieRoom_Cell", Storage="_MovieRoom_Row", ThisKey="MRRID", OtherKey="MRRID", IsForeignKey=true)]
		public MovieRoom_Row MovieRoom_Row
		{
			get
			{
				return this._MovieRoom_Row.Entity;
			}
			set
			{
				MovieRoom_Row previousValue = this._MovieRoom_Row.Entity;
				if (((previousValue != value) 
							|| (this._MovieRoom_Row.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MovieRoom_Row.Entity = null;
						previousValue.MovieRoom_Cell.Remove(this);
					}
					this._MovieRoom_Row.Entity = value;
					if ((value != null))
					{
						value.MovieRoom_Cell.Add(this);
						this._MRRID = value.MRRID;
					}
					else
					{
						this._MRRID = default(long);
					}
					this.SendPropertyChanged("MovieRoom_Row");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NovieRoom_Sell(NovieRoom_Sell entity)
		{
			this.SendPropertyChanging();
			entity.MovieRoom_Cell = this;
		}
		
		private void detach_NovieRoom_Sell(NovieRoom_Sell entity)
		{
			this.SendPropertyChanging();
			entity.MovieRoom_Cell = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NovieRoom_Sell")]
	public partial class NovieRoom_Sell : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SeqNo;
		
		private long _MRCID;
		
		private System.DateTime _CreDate;
		
		private EntityRef<MovieRoom_Cell> _MovieRoom_Cell;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSeqNoChanging(int value);
    partial void OnSeqNoChanged();
    partial void OnMRCIDChanging(long value);
    partial void OnMRCIDChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    #endregion
		
		public NovieRoom_Sell()
		{
			this._MovieRoom_Cell = default(EntityRef<MovieRoom_Cell>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeqNo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SeqNo
		{
			get
			{
				return this._SeqNo;
			}
			set
			{
				if ((this._SeqNo != value))
				{
					this.OnSeqNoChanging(value);
					this.SendPropertyChanging();
					this._SeqNo = value;
					this.SendPropertyChanged("SeqNo");
					this.OnSeqNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MRCID", DbType="BigInt NOT NULL")]
		public long MRCID
		{
			get
			{
				return this._MRCID;
			}
			set
			{
				if ((this._MRCID != value))
				{
					if (this._MovieRoom_Cell.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMRCIDChanging(value);
					this.SendPropertyChanging();
					this._MRCID = value;
					this.SendPropertyChanged("MRCID");
					this.OnMRCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MovieRoom_Cell_NovieRoom_Sell", Storage="_MovieRoom_Cell", ThisKey="MRCID", OtherKey="MRCID", IsForeignKey=true)]
		public MovieRoom_Cell MovieRoom_Cell
		{
			get
			{
				return this._MovieRoom_Cell.Entity;
			}
			set
			{
				MovieRoom_Cell previousValue = this._MovieRoom_Cell.Entity;
				if (((previousValue != value) 
							|| (this._MovieRoom_Cell.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MovieRoom_Cell.Entity = null;
						previousValue.NovieRoom_Sell.Remove(this);
					}
					this._MovieRoom_Cell.Entity = value;
					if ((value != null))
					{
						value.NovieRoom_Sell.Add(this);
						this._MRCID = value.MRCID;
					}
					else
					{
						this._MRCID = default(long);
					}
					this.SendPropertyChanged("MovieRoom_Cell");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MovieRoom_Row")]
	public partial class MovieRoom_Row : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _MRRID;
		
		private string _RowName;
		
		private int _SortNo;
		
		private System.DateTime _CreDate;
		
		private System.DateTime _UpdDate;
		
		private EntitySet<MovieRoom_Cell> _MovieRoom_Cell;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMRRIDChanging(long value);
    partial void OnMRRIDChanged();
    partial void OnRowNameChanging(string value);
    partial void OnRowNameChanged();
    partial void OnSortNoChanging(int value);
    partial void OnSortNoChanged();
    partial void OnCreDateChanging(System.DateTime value);
    partial void OnCreDateChanged();
    partial void OnUpdDateChanging(System.DateTime value);
    partial void OnUpdDateChanged();
    #endregion
		
		public MovieRoom_Row()
		{
			this._MovieRoom_Cell = new EntitySet<MovieRoom_Cell>(new Action<MovieRoom_Cell>(this.attach_MovieRoom_Cell), new Action<MovieRoom_Cell>(this.detach_MovieRoom_Cell));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MRRID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long MRRID
		{
			get
			{
				return this._MRRID;
			}
			set
			{
				if ((this._MRRID != value))
				{
					this.OnMRRIDChanging(value);
					this.SendPropertyChanging();
					this._MRRID = value;
					this.SendPropertyChanged("MRRID");
					this.OnMRRIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowName", DbType="NVarChar(50)")]
		public string RowName
		{
			get
			{
				return this._RowName;
			}
			set
			{
				if ((this._RowName != value))
				{
					this.OnRowNameChanging(value);
					this.SendPropertyChanging();
					this._RowName = value;
					this.SendPropertyChanged("RowName");
					this.OnRowNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortNo", DbType="Int NOT NULL")]
		public int SortNo
		{
			get
			{
				return this._SortNo;
			}
			set
			{
				if ((this._SortNo != value))
				{
					this.OnSortNoChanging(value);
					this.SendPropertyChanging();
					this._SortNo = value;
					this.SendPropertyChanged("SortNo");
					this.OnSortNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreDate
		{
			get
			{
				return this._CreDate;
			}
			set
			{
				if ((this._CreDate != value))
				{
					this.OnCreDateChanging(value);
					this.SendPropertyChanging();
					this._CreDate = value;
					this.SendPropertyChanged("CreDate");
					this.OnCreDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdDate
		{
			get
			{
				return this._UpdDate;
			}
			set
			{
				if ((this._UpdDate != value))
				{
					this.OnUpdDateChanging(value);
					this.SendPropertyChanging();
					this._UpdDate = value;
					this.SendPropertyChanged("UpdDate");
					this.OnUpdDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MovieRoom_Row_MovieRoom_Cell", Storage="_MovieRoom_Cell", ThisKey="MRRID", OtherKey="MRRID")]
		public EntitySet<MovieRoom_Cell> MovieRoom_Cell
		{
			get
			{
				return this._MovieRoom_Cell;
			}
			set
			{
				this._MovieRoom_Cell.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MovieRoom_Cell(MovieRoom_Cell entity)
		{
			this.SendPropertyChanging();
			entity.MovieRoom_Row = this;
		}
		
		private void detach_MovieRoom_Cell(MovieRoom_Cell entity)
		{
			this.SendPropertyChanging();
			entity.MovieRoom_Row = null;
		}
	}
}
#pragma warning restore 1591
